{"version":3,"sources":["components/pages/Pakda.jsx","components/modal/Popup.jsx","Constants.jsx","components/forms/SelectType.jsx","components/pages/Pokemon.jsx","App.js","registerServiceWorker.js","index.js"],"names":["Pakda","state","imgUrl","loadingImage","loadImage","_this","setState","axios","get","props","pakad","url","then","res","data","sprites","front_default","front_shiny","react_default","a","createElement","className","src","this","alt","style","width","onClick","name","React","Component","backdropStyle","position","top","bottom","left","right","backgroundColor","padding","zIndex","modalStyle","color","radius","maxWidth","minHeight","margin","footerStyle","Popup","onKeyUp","e","which","onClose","document","addEventListener","show","children","BASE_URL","API_URL","TYPE","ABILITY","SelectType","type","onTypeChange","target","value","search","onChange","Pokemon","loading","error","pakdemonList","toggleLoading","toggleError","pakdemonType","pokemon","catch","console","log","close","_this$state","Progress","modal_Popup","forms_SelectType","sort","b","localeCompare","map","pakde","index","pages_Pakda","key","App","pages_Pokemon","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App_0","getElementById","URL","process","origin","concat","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.69348098.chunk.js","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../../App.css\";\r\n\r\nclass Pakda extends React.Component {\r\n\r\n    state = {\r\n        imgUrl:\r\n            \"https://i.redditmedia.com/e5zoQw-hgw-LCjdhC_4G8IAcHxex5pzda_BD_FPTcBY.png?fit=crop&crop=faces%2Centropy&arh=2&w=960&s=3d7dcda282bfc1f3ff3dc0d971f13113\",\r\n        loadingImage: \"not started\"\r\n    };\r\n\r\n    loadImage = () => {\r\n        this.setState({ loadingImage: \"loading\" });\r\n        axios.get(this.props.pakad.url).then(res => {\r\n            this.setState({\r\n                imgUrl:\r\n                    res.data.sprites.front_default ||\r\n                    res.data.sprites.front_shiny,\r\n                loadingImage: \"finished\"\r\n            });\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card pakde-card\">\r\n                <div>\r\n                    <img\r\n                        src={\r\n                            this.state.loadingImage === \"loading\"\r\n                                ? \"https://cdn-images-1.medium.com/max/1600/1*9EBHIOzhE1XfMYoKz1JcsQ.gif\"\r\n                                : this.state.imgUrl\r\n                        }\r\n                        alt=\"cat\"\r\n                        style={{ width: \"100px\" }}\r\n                    />\r\n                    <div>\r\n                        <button onClick={this.loadImage}>Load image</button>\r\n                    </div>\r\n                </div>\r\n                <b className=\"cont-pad\">{this.props.pakad.name}</b>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Pakda;\r\n","import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\n\r\nconst backdropStyle = {\r\n    position: 'fixed',\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    backgroundColor: 'rgba(0,0,0,0.3)',\r\n    padding: 50,\r\n    zIndex: 100\r\n};\r\n\r\nconst modalStyle = {\r\n    color: '#000',\r\n    backgroundColor: '#fff',\r\n    radius: 5,\r\n    maxWidth: 500,\r\n    minHeight: 300,\r\n    margin: '0 auto',\r\n    padding: 30,\r\n    position: 'relative'\r\n};\r\n\r\nconst footerStyle = {\r\n    position: 'absolute',\r\n    bottom: 20\r\n};\r\n\r\nclass Popup extends Component {\r\n    componentWillMount() {\r\n        document.addEventListener(\"keyup\", this.onKeyUp)\r\n    }\r\n    \r\n    componentDidMount() {\r\n        document.addEventListener(\"keyup\", this.onKeyUp)\r\n    }\r\n        \r\n    onKeyUp = (e) => {\r\n        if (e.which === 27) this.onClose(e);\r\n    }\r\n\r\n    onClose = (e) => {\r\n        this.props.onClose() && this.props.onClose(e);\r\n    }\r\n\r\n    static propTypes = {\r\n       onClose: PropTypes.func.isRequired  \r\n    };        \r\n\r\n    render() {        \r\n        if (!this.props.show) return null;\r\n        return (\r\n            <div style={backdropStyle}>\r\n                <div style={modalStyle}>\r\n                    {this.props.children}\r\n                    <div style={footerStyle}>\r\n                        <button onClick={this.onClose}>Close</button>\r\n                    </div>    \r\n                </div>                \r\n            </div>            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Popup;","const BASE_URL = \"https://pokeapi.co/api/v2/\";\r\n\r\nconst API_URL = {\r\n    TYPE: BASE_URL + \"/type/\",\r\n    ABILITY: BASE_URL + \"/ability/\"\r\n};\r\n\r\nexport default API_URL;\r\n","import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\n\r\nclass SelectType extends Component {\r\n    \r\n        state = {\r\n            type: 1\r\n        };\r\n    \r\n    static propTypes = {\r\n        search: PropTypes.func.isRequired\r\n    };\r\n\r\n    onTypeChange = (e) => this.setState({type: e.target.value});\r\n    onClick = () => this.props.search(this.state.type);\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card container\">                            \r\n            <h2>Pakdo apna Pakdemon:</h2>\r\n                <form>                    \r\n                    <select onChange={this.onTypeChange}>\r\n                        <option value={1}>Normal</option>\r\n                        <option value={3}>Flying</option>\r\n                        <option value={10}>Fire</option>\r\n                        <option value={4}>Poison</option>\r\n                    </select>                    \r\n                </form>\r\n                <button className=\"btn\" onClick={this.onClick}>Search for Type</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectType;","import axios from 'axios';\r\nimport Pakda from './Pakda';\r\nimport Popup from '../modal/Popup';\r\nimport API_URL from '../../Constants';\r\nimport React, { Component } from 'react';\r\nimport { LinearProgress } from 'material-ui';\r\nimport SelectType from '../forms/SelectType';\r\n\r\nclass Pokemon extends Component {\r\n\r\n    state = {\r\n        loading: false,\r\n        error: false,\r\n        pakdemonList: []\r\n    };\r\n\r\n\r\n    toggleLoading = () => this.setState({loading: !this.state.loading});\r\n    toggleError = () => this.setState({error: !this.state.error});\r\n\r\n    search = pakdemonType => {        \r\n        if (!this.state.loading) this.toggleLoading();\r\n        if (this.state.error) this.toggleError();\r\n        \r\n        axios.get(API_URL.TYPE+pakdemonType+\"/\")\r\n            .then(res => {       \r\n                  \r\n                this.setState({pakdemonList: res.data.pokemon});                \r\n                this.toggleLoading();    \r\n            })\r\n            .catch(e => {\r\n                console.log(\"errrr\",e);\r\n                this.toggleError();\r\n            });\r\n    };\r\n\r\n    close = () => this.setState({loading: false});\r\n\r\n    render() {\r\n        const {loading, error, pakdemonList} = this.state;\r\n        return (\r\n            <div>\r\n                {loading && <LinearProgress color={error ? \"secondary\" : \"primary\"}/>}\r\n                <Popup show={loading} onClose={this.close}>\r\n                    LOADING ....                    \r\n                </Popup>\r\n                \r\n                <SelectType search={this.search} />\r\n                {error && <div className=\"err-card\">Could NOT catch Pakdemon :/</div>}\r\n                <div className=\"grid-container\">\r\n                    {\r\n                        pakdemonList.sort((a, b) => a.pokemon.name.localeCompare(b.pokemon.name))\r\n                        .map((pakde, index) => <Pakda key={index} pakad={pakde.pokemon}/>)\r\n                    }\r\n                </div>                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Pokemon;","import React from 'react';\r\nimport \"./App.css\";\r\nimport Pokemon from './components/pages/Pokemon';\r\n\r\nconst App = () => (\r\n  <div className=\"container app-container\">\r\n    <h1>Pakdemon!!</h1>\r\n    <Pokemon />\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}